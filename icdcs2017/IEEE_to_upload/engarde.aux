\relax 
\citation{sgx:attest:hasp13,sgx:instructions:hasp13,sgx:isolated:hasp13,intelsgx:sep13,intelsgx:oct14}
\citation{davenportford:vbtn,rutkowska:aug13,rutkowska:sep13}
\citation{minibox:atc14}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}}
\newlabel{section:introduction}{{1}{1}}
\citation{intelsgx:sep13,intelsgx:oct14}
\citation{sgx:attest:hasp13}
\citation{sailer:tpm:security04}
\citation{sgx:attest:hasp13}
\@writefile{toc}{\contentsline {section}{\numberline {2}SGX Background}{2}}
\newlabel{section:background}{{2}{2}}
\citation{sgx:attest:hasp13}
\citation{nativeclient:oak09}
\@writefile{toc}{\contentsline {section}{\numberline {3}Design of EnGarde\xspace  }{3}}
\newlabel{section:design}{{3}{3}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Design of EnGarde\xspace  .}}{3}}
\newlabel{figure:overalldesign}{{1}{3}}
\citation{sgx:v2:na}
\citation{asyncshock:esorics16}
\citation{opensgx:ndss16}
\citation{win10:sdk}
\citation{linuxsdk:june16}
\citation{intelsgx:sep13,intelsgx:oct14}
\citation{dynmgmt:hasp16,dynalloc:hasp16}
\citation{asyncshock:esorics16}
\citation{dynmgmt:hasp16,dynalloc:hasp16}
\citation{sgx:v2:na}
\citation{elfsharedlib,elfsystemV}
\@writefile{toc}{\contentsline {section}{\numberline {4}Implementation}{4}}
\newlabel{section:implementation}{{4}{4}}
\citation{intelinstructionset:june16}
\citation{musllibc}
\citation{gnulibc}
\citation{moatplus:pldi16}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Sizes of various components of EnGarde\xspace  . Some of these components (\textit  {e.g.,}\xspace  \nobreakspace  {}the cryptographic libraries) are part of the default loader in all enclave implementations.}}{5}}
\newlabel{table:tcb}{{2}{5}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Evaluation}{5}}
\newlabel{section:evaluation}{{5}{5}}
\citation{musllibc}
\citation{opensgx:ndss16}
\citation{qemu}
\citation{google:asan:usenix:2012}
\citation{softbound:pldi09}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Performance of EnGarde\xspace  \ to check the \textit  {Library-linking} policy. Here EnGarde\xspace  \ checks whether each benchmark has been linked against musl-libc. The figure shows the size of each benchmark, measured as the number of instructions in the code to be loaded in the enclave, and the time taken to execute each step of EnGarde\xspace  , reported as CPU cycles. Wall-clock time can be obtained by multiplying CPU clock cycles with the clock cycle time. A CPU with a clock rate of 3.5GHz as used in our experiments has 1/3.5 nanoseconds cycle time. Therefore, the 694,405,019 cycles it takes to disassemble Nginx, for example, consumes 198.4 milliseconds.}}{6}}
\newlabel{table:checkinglinkedlib}{{3}{6}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Performance of EnGarde\xspace  \ to check the \textit  {Stack protection} policy. As before, for performance numbers, we report the CPU cycles.}}{6}}
\newlabel{table:checkingstackprotection}{{4}{6}}
\citation{edgecfi:sec14}
\citation{llvmforwardedgecfi}
\citation{haven:tocs15}
\citation{vc3:oak15}
\citation{securekeeper:middleware16}
\citation{snfv:sdn16}
\citation{machinelearningsgx:usenixsec16}
\citation{moat:ccs15}
\citation{moatplus:pldi16}
\citation{controlledchannel:oak15}
\citation{asyncshock:esorics16}
\citation{hunt:osdi16}
\citation{nativeclient:oak09}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Performance of EnGarde\xspace  \ to check the \textit  {Indirect Function-Call} policy. As before, for performance numbers, we report the CPU cycles.}}{7}}
\newlabel{table:checkingindirectfunccall}{{5}{7}}
\@writefile{toc}{\contentsline {section}{\numberline {6}Related Work}{7}}
\newlabel{section:related}{{6}{7}}
\citation{binaryanalysis:AAAI08}
\citation{functionrecognizing:usenixsec15}
\citation{functionrecognizing:usenixsec15}
\citation{stackcanaries:handbookofinfosec}
\citation{xfi:osdi06,mip:ccs13,hypersafe:oak10,edgecfi:sec14}
\bibstyle{plain}
\bibdata{references}
\bibcite{gnulibc}{{1}{}{{}}{{}}}
\bibcite{win10:sdk}{{2}{}{{}}{{}}}
\bibcite{musllibc}{{3}{}{{}}{{}}}
\bibcite{qemu}{{4}{}{{}}{{}}}
\bibcite{intelinstructionset:june16}{{5}{}{{}}{{}}}
\bibcite{sgx:v2:na}{{6}{}{{}}{{}}}
\bibcite{sgx:attest:hasp13}{{7}{}{{}}{{}}}
\bibcite{haven:tocs15}{{8}{}{{}}{{}}}
\bibcite{securekeeper:middleware16}{{9}{}{{}}{{}}}
\bibcite{davenportford:vbtn}{{10}{}{{}}{{}}}
\bibcite{elfsharedlib}{{11}{}{{}}{{}}}
\bibcite{xfi:osdi06}{{12}{}{{}}{{}}}
\bibcite{stackcanaries:handbookofinfosec}{{13}{}{{}}{{}}}
\bibcite{moat:ccs15}{{14}{}{{}}{{}}}
\bibcite{sgx:instructions:hasp13}{{15}{}{{}}{{}}}
\bibcite{hunt:osdi16}{{16}{}{{}}{{}}}
\bibcite{intelsgx:sep13}{{17}{}{{}}{{}}}
\bibcite{intelsgx:oct14}{{18}{}{{}}{{}}}
\bibcite{opensgx:ndss16}{{19}{}{{}}{{}}}
\bibcite{minibox:atc14}{{20}{}{{}}{{}}}
\bibcite{dynmgmt:hasp16}{{21}{}{{}}{{}}}
\bibcite{sgx:isolated:hasp13}{{22}{}{{}}{{}}}
\bibcite{softbound:pldi09}{{23}{}{{}}{{}}}
\bibcite{mip:ccs13}{{24}{}{{}}{{}}}
\bibcite{machinelearningsgx:usenixsec16}{{25}{}{{}}{{}}}
\bibcite{llvmforwardedgecfi}{{26}{}{{}}{{}}}
\bibcite{binaryanalysis:AAAI08}{{27}{}{{}}{{}}}
\bibcite{rutkowska:aug13}{{28}{}{{}}{{}}}
\bibcite{rutkowska:sep13}{{29}{}{{}}{{}}}
\bibcite{sailer:tpm:security04}{{30}{}{{}}{{}}}
\bibcite{vc3:oak15}{{31}{}{{}}{{}}}
\bibcite{elfsystemV}{{32}{}{{}}{{}}}
\bibcite{google:asan:usenix:2012}{{33}{}{{}}{{}}}
\bibcite{snfv:sdn16}{{34}{}{{}}{{}}}
\bibcite{functionrecognizing:usenixsec15}{{35}{}{{}}{{}}}
\bibcite{moatplus:pldi16}{{36}{}{{}}{{}}}
\bibcite{edgecfi:sec14}{{37}{}{{}}{{}}}
\bibcite{hypersafe:oak10}{{38}{}{{}}{{}}}
\bibcite{asyncshock:esorics16}{{39}{}{{}}{{}}}
\bibcite{dynalloc:hasp16}{{40}{}{{}}{{}}}
\bibcite{controlledchannel:oak15}{{41}{}{{}}{{}}}
\bibcite{nativeclient:oak09}{{42}{}{{}}{{}}}
\bibcite{linuxsdk:june16}{{43}{}{{}}{{}}}
\providecommand\NAT@force@numbers{}\NAT@force@numbers
\@writefile{toc}{\contentsline {section}{\numberline {7}Conclusion}{8}}
\newlabel{section:conclusion}{{7}{8}}


Correct enforcement of authorization policies is a difficult task, especially
for multi-threaded software.  Even in carefully-reviewed code, unauthorized
access may be possible in subtle corner cases.  We introduce Transactional
Memory Introspection (TMI), a novel reference monitor architecture that builds
on Software Transactional Memory---a new, attractive alternative for writing
correct, multi-threaded software.

TMI facilitates correct security enforcement by simplifying how the reference
monitor integrates with software functionality.  TMI can ensure complete
mediation of security-relevant operations, eliminate race conditions related to
security checks, and simplify handling of authorization failures.  We present
the design and implementation of a TMI-based reference monitor and experiment
with its use in enforcing authorization policies on four significant servers.
Our experiments confirm the benefits of the TMI architecture and show that it
imposes an acceptable runtime overhead.






%------------------------------------------------------------------------------
%                                Main Contents. 
%------------------------------------------------------------------------------

% \input{sections/notes}

\input{sections/introduction}
\input{sections/background}
\input{sections/design}
\input{sections/evaluation}
\input{sections/related}
\input{sections/conclusion}


%------------------------------------------------------------------------------
%                                  References.
%------------------------------------------------------------------------------
\footnotesize
\let\oldthebibliography=\thebibliography
  \let\endoldthebibliography=\endthebibliography
  \renewenvironment{thebibliography}[1]{%
    \begin{oldthebibliography}{#1}%
      \setlength{\parskip}{0.01ex}%
      \setlength{\itemsep}{.1ex}%
  }%
  {%
    \end{oldthebibliography}%
  }
%\small

\bibliographystyle{plain}
\bibliography{references}

\normalsize

\end{document}

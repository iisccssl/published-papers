%!PS-Adobe-2.0 EPSF-2.0
%%Title: pass2-summary-constraints.fig
%%Creator: /s/transfig-3.2.3d/exe/fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Mon Apr 28 23:57:50 2003
%%For: vg@stephano.cs.wisc.edu (Vinod Ganapathy,5384CS,(608)262-6612,(608)255-4073)
%%BoundingBox: 0 0 781 326
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 326 moveto 0 0 lineto 781 0 lineto 781 326 lineto closepath clip newpath
-9.0 371.0 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Helvetica /Helvetica-iso isovec ReEncode
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
7.500 slw
% Ellipse
n 1200 1200 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 75.00 75.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 7200 1200 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 475.00 75.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 2925 4050 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 190.00 265.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6150 4050 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 405.00 265.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 8250 4050 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 545.00 265.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9300 1200 75 75 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 615.00 75.00]  PATmp PATsp ef gr PATusp gs col0 s gr

% Polyline
gs  clippath
6574 5797 m 6632 5781 l 6594 5635 l 6596 5759 l 6536 5650 l cp
eoclip
n 6150 4050 m
 6600 5775 l gs col0 s gr gr

% arrowhead
n 6536 5650 m 6596 5759 l 6594 5635 l  col0 s
% Polyline
15.000 slw
 [15 68] 68 sd
gs  clippath
2881 4093 m 2984 4031 l 2799 3728 l 2904 4016 l 2697 3790 l cp
eoclip
n 1200 1200 m
 2925 4050 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 2697 3790 m 2904 4016 l 2799 3728 l 2779 3810 l 2697 3790 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
 [15 68] 68 sd
gs  clippath
7261 1206 m 7148 1165 l 7025 1497 l 7186 1237 l 7138 1539 l cp
eoclip
n 6150 4050 m
 7200 1200 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 7138 1539 m 7186 1237 l 7025 1497 l 7103 1462 l 7138 1539 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
 [15 68] 68 sd
gs  clippath
9361 1206 m 9248 1165 l 9125 1497 l 9286 1237 l 9238 1539 l cp
eoclip
n 8250 4050 m
 9300 1200 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 9238 1539 m 9286 1237 l 9125 1497 l 9203 1462 l 9238 1539 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
2 slj
gs  clippath
7235 1250 m 7192 1138 l 6861 1267 l 7163 1214 l 6905 1379 l cp
eoclip
n 1200 1200 m 1202 1201 l 1206 1202 l 1213 1205 l 1225 1209 l 1242 1214 l
 1263 1222 l 1291 1231 l 1324 1242 l 1362 1255 l 1404 1269 l
 1451 1285 l 1501 1302 l 1553 1319 l 1607 1337 l 1662 1356 l
 1718 1374 l 1773 1392 l 1827 1410 l 1881 1427 l 1933 1443 l
 1984 1459 l 2033 1475 l 2080 1489 l 2126 1503 l 2171 1517 l
 2214 1529 l 2256 1542 l 2297 1553 l 2337 1564 l 2377 1575 l
 2417 1586 l 2456 1596 l 2496 1606 l 2535 1615 l 2575 1625 l
 2611 1634 l 2648 1642 l 2685 1650 l 2723 1659 l 2762 1667 l
 2801 1676 l 2841 1684 l 2881 1692 l 2923 1700 l 2965 1708 l
 3008 1716 l 3052 1724 l 3096 1732 l 3141 1740 l 3187 1747 l
 3233 1755 l 3279 1762 l 3326 1769 l 3374 1776 l 3421 1783 l
 3469 1789 l 3516 1795 l 3564 1801 l 3612 1807 l 3659 1812 l
 3706 1817 l 3752 1821 l 3799 1826 l 3844 1830 l 3889 1833 l
 3934 1836 l 3978 1839 l 4022 1842 l 4065 1844 l 4107 1846 l
 4149 1847 l 4190 1848 l 4231 1849 l 4272 1850 l 4313 1850 l
 4353 1850 l 4393 1849 l 4434 1848 l 4474 1847 l 4515 1846 l
 4556 1844 l 4597 1842 l 4639 1839 l 4681 1836 l 4724 1833 l
 4766 1830 l 4809 1826 l 4853 1821 l 4896 1817 l 4940 1812 l
 4984 1807 l 5028 1801 l 5072 1795 l 5116 1789 l 5159 1783 l
 5203 1776 l 5246 1769 l 5289 1762 l 5331 1755 l 5373 1747 l
 5415 1740 l 5455 1732 l 5495 1724 l 5535 1716 l 5574 1708 l
 5612 1700 l 5649 1692 l 5686 1684 l 5721 1676 l 5757 1667 l
 5791 1659 l 5825 1650 l 5859 1642 l 5892 1634 l 5925 1625 l
 5961 1615 l 5997 1606 l 6033 1596 l 6069 1586 l 6105 1575 l
 6141 1564 l 6178 1553 l 6216 1542 l 6255 1529 l 6295 1517 l
 6336 1503 l 6378 1489 l 6422 1475 l 6468 1459 l 6515 1443 l
 6564 1427 l 6613 1410 l 6664 1392 l 6716 1374 l 6767 1356 l
 6819 1337 l 6869 1319 l 6918 1302 l 6965 1285 l 7009 1269 l
 7049 1255 l 7084 1242 l 7115 1231 l 7140 1222 l 7161 1214 l
 7177 1209 l
 7200 1200 l gs col0 s gr gr

% arrowhead
0 slj
n 6905 1379 m 7163 1214 l 6861 1267 l 6939 1301 l 6905 1379 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
2 slj
gs  clippath
9346 1241 m 9278 1142 l 8985 1341 l 9267 1222 l 9053 1440 l cp
eoclip
n 1200 1200 m 1201 1201 l 1205 1203 l 1210 1207 l 1220 1213 l 1233 1221 l
 1251 1232 l 1273 1247 l 1300 1264 l 1332 1284 l 1368 1306 l
 1409 1332 l 1453 1359 l 1500 1388 l 1549 1419 l 1601 1450 l
 1653 1483 l 1707 1515 l 1761 1547 l 1814 1579 l 1867 1611 l
 1919 1641 l 1970 1671 l 2020 1699 l 2069 1727 l 2116 1753 l
 2163 1778 l 2208 1802 l 2251 1825 l 2294 1847 l 2336 1868 l
 2377 1888 l 2418 1907 l 2458 1926 l 2498 1943 l 2538 1961 l
 2578 1977 l 2618 1993 l 2659 2009 l 2700 2025 l 2738 2039 l
 2776 2053 l 2815 2066 l 2854 2080 l 2894 2093 l 2935 2107 l
 2976 2120 l 3018 2133 l 3061 2146 l 3105 2159 l 3149 2172 l
 3194 2185 l 3240 2198 l 3286 2211 l 3333 2223 l 3381 2236 l
 3428 2248 l 3477 2260 l 3525 2272 l 3574 2284 l 3623 2296 l
 3672 2308 l 3720 2319 l 3769 2330 l 3818 2341 l 3866 2352 l
 3914 2362 l 3961 2372 l 4008 2382 l 4054 2392 l 4100 2401 l
 4145 2410 l 4189 2419 l 4232 2428 l 4275 2436 l 4317 2444 l
 4358 2452 l 4398 2459 l 4438 2467 l 4477 2474 l 4515 2481 l
 4552 2487 l 4589 2494 l 4625 2500 l 4669 2508 l 4712 2515 l
 4754 2522 l 4797 2529 l 4839 2536 l 4881 2543 l 4923 2549 l
 4965 2556 l 5007 2562 l 5049 2568 l 5091 2574 l 5133 2579 l
 5175 2585 l 5217 2590 l 5258 2595 l 5300 2599 l 5341 2604 l
 5383 2608 l 5424 2611 l 5464 2615 l 5504 2618 l 5544 2621 l
 5583 2623 l 5622 2625 l 5660 2627 l 5698 2629 l 5735 2630 l
 5771 2630 l 5807 2631 l 5843 2631 l 5878 2631 l 5913 2630 l
 5947 2629 l 5981 2628 l 6016 2627 l 6050 2625 l 6083 2623 l
 6116 2621 l 6149 2618 l 6183 2615 l 6217 2612 l 6252 2608 l
 6288 2604 l 6324 2600 l 6361 2595 l 6399 2590 l 6437 2584 l
 6476 2577 l 6516 2571 l 6556 2563 l 6596 2555 l 6638 2547 l
 6679 2538 l 6722 2529 l 6764 2519 l 6806 2508 l 6849 2498 l
 6892 2486 l 6935 2474 l 6977 2462 l 7020 2450 l 7062 2437 l
 7105 2423 l 7146 2409 l 7188 2395 l 7229 2380 l 7270 2365 l
 7311 2350 l 7351 2335 l 7391 2318 l 7431 2302 l 7471 2285 l
 7510 2268 l 7550 2250 l 7584 2234 l 7619 2218 l 7654 2201 l
 7689 2184 l 7725 2165 l 7762 2147 l 7799 2127 l 7838 2106 l
 7877 2085 l 7917 2063 l 7959 2039 l 8002 2014 l 8047 1988 l
 8093 1961 l 8141 1932 l 8191 1903 l 8243 1871 l 8296 1839 l
 8351 1805 l 8407 1770 l 8465 1734 l 8524 1697 l 8584 1659 l
 8645 1621 l 8705 1583 l 8766 1544 l 8825 1506 l 8883 1469 l
 8939 1434 l 8992 1399 l 9042 1367 l 9088 1337 l 9130 1310 l
 9167 1286 l 9200 1265 l 9227 1247 l 9250 1233 l 9267 1221 l
 9281 1213 l
 9300 1200 l gs col0 s gr gr

% arrowhead
0 slj
n 9053 1440 m 9267 1222 l 8985 1341 l 9068 1357 l 9053 1440 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
2 slj
 [15 68] 68 sd
gs  clippath
6207 4072 m 6109 4003 l 5904 4291 l 6127 4082 l 6002 4361 l cp
eoclip
n 2925 4050 m 2927 4051 l 2933 4054 l 2942 4059 l 2957 4068 l 2977 4078 l
 3003 4092 l 3033 4109 l 3067 4127 l 3104 4147 l 3143 4167 l
 3182 4188 l 3221 4209 l 3260 4229 l 3297 4249 l 3332 4267 l
 3366 4284 l 3398 4300 l 3428 4315 l 3457 4329 l 3484 4343 l
 3511 4355 l 3537 4367 l 3562 4378 l 3587 4389 l 3613 4400 l
 3638 4410 l 3663 4421 l 3689 4431 l 3715 4441 l 3742 4452 l
 3769 4462 l 3797 4472 l 3826 4482 l 3855 4492 l 3884 4503 l
 3914 4513 l 3943 4523 l 3973 4532 l 4003 4542 l 4033 4551 l
 4062 4561 l 4091 4569 l 4119 4578 l 4147 4586 l 4174 4594 l
 4201 4602 l 4227 4610 l 4252 4617 l 4277 4624 l 4301 4631 l
 4325 4638 l 4351 4645 l 4376 4652 l 4402 4659 l 4428 4666 l
 4455 4672 l 4481 4679 l 4508 4686 l 4536 4692 l 4563 4699 l
 4591 4705 l 4619 4711 l 4647 4716 l 4674 4722 l 4702 4726 l
 4729 4731 l 4755 4735 l 4782 4738 l 4807 4742 l 4832 4744 l
 4857 4746 l 4880 4748 l 4904 4749 l 4927 4750 l 4950 4750 l
 4973 4750 l 4996 4749 l 5019 4748 l 5043 4746 l 5067 4744 l
 5092 4741 l 5117 4738 l 5143 4734 l 5168 4729 l 5194 4724 l
 5220 4719 l 5247 4713 l 5272 4706 l 5298 4699 l 5323 4692 l
 5348 4684 l 5373 4676 l 5396 4668 l 5419 4659 l 5441 4650 l
 5463 4641 l 5484 4632 l 5505 4622 l 5525 4613 l 5547 4601 l
 5568 4590 l 5590 4577 l 5612 4565 l 5634 4551 l 5656 4537 l
 5678 4523 l 5700 4508 l 5722 4492 l 5743 4477 l 5765 4461 l
 5785 4445 l 5806 4429 l 5825 4413 l 5844 4397 l 5862 4382 l
 5878 4367 l 5894 4353 l 5909 4339 l 5924 4326 l 5937 4313 l
 5950 4300 l 5967 4283 l 5982 4266 l 5998 4250 l 6013 4232 l
 6028 4214 l 6043 4195 l 6059 4174 l 6076 4152 l 6093 4130 l
 6109 4108 l 6123 4088 l
 6150 4050 l gs col0 s gr gr
 [] 0 sd
% arrowhead
0 slj
n 6002 4361 m 6127 4082 l 5904 4291 l 5987 4277 l 6002 4361 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
2 slj
 [15 68] 68 sd
gs  clippath
8311 4056 m 8198 4015 l 8077 4348 l 8236 4087 l 8189 4389 l cp
eoclip
n 2925 4125 m 2927 4126 l 2930 4130 l 2936 4136 l 2946 4145 l 2959 4159 l
 2976 4175 l 2997 4195 l 3021 4218 l 3047 4244 l 3075 4271 l
 3105 4299 l 3135 4328 l 3165 4356 l 3194 4384 l 3223 4411 l
 3251 4437 l 3278 4461 l 3303 4485 l 3328 4507 l 3352 4529 l
 3376 4549 l 3399 4569 l 3422 4588 l 3444 4607 l 3467 4626 l
 3489 4644 l 3513 4663 l 3534 4680 l 3557 4697 l 3580 4715 l
 3604 4733 l 3628 4751 l 3653 4769 l 3679 4788 l 3705 4807 l
 3733 4826 l 3761 4846 l 3789 4865 l 3818 4885 l 3848 4905 l
 3878 4925 l 3909 4945 l 3939 4965 l 3970 4984 l 4001 5003 l
 4032 5022 l 4062 5041 l 4092 5059 l 4122 5076 l 4152 5094 l
 4181 5110 l 4210 5126 l 4239 5142 l 4267 5157 l 4295 5172 l
 4322 5186 l 4350 5200 l 4378 5214 l 4405 5227 l 4433 5240 l
 4461 5253 l 4490 5266 l 4519 5279 l 4548 5292 l 4578 5304 l
 4609 5316 l 4639 5329 l 4670 5341 l 4702 5352 l 4733 5364 l
 4765 5375 l 4797 5386 l 4828 5397 l 4859 5407 l 4890 5417 l
 4921 5426 l 4951 5435 l 4981 5443 l 5011 5451 l 5039 5459 l
 5067 5466 l 5095 5473 l 5122 5479 l 5148 5485 l 5174 5490 l
 5200 5495 l 5225 5500 l 5254 5505 l 5283 5510 l 5312 5514 l
 5342 5518 l 5371 5522 l 5402 5525 l 5432 5528 l 5463 5531 l
 5494 5534 l 5526 5536 l 5558 5537 l 5590 5539 l 5622 5540 l
 5653 5540 l 5685 5541 l 5716 5540 l 5747 5540 l 5777 5539 l
 5807 5538 l 5836 5537 l 5864 5536 l 5892 5534 l 5920 5532 l
 5947 5530 l 5974 5528 l 6000 5525 l 6025 5522 l 6049 5520 l
 6074 5517 l 6100 5514 l 6125 5510 l 6152 5506 l 6179 5502 l
 6206 5498 l 6234 5493 l 6262 5488 l 6291 5483 l 6320 5477 l
 6349 5471 l 6378 5465 l 6408 5458 l 6438 5451 l 6467 5444 l
 6497 5436 l 6526 5429 l 6555 5421 l 6583 5413 l 6611 5404 l
 6639 5396 l 6667 5387 l 6694 5378 l 6721 5369 l 6748 5360 l
 6775 5350 l 6802 5340 l 6830 5330 l 6857 5319 l 6886 5307 l
 6915 5296 l 6944 5283 l 6974 5271 l 7004 5257 l 7035 5243 l
 7066 5229 l 7098 5214 l 7130 5199 l 7161 5184 l 7193 5168 l
 7225 5152 l 7256 5136 l 7286 5120 l 7317 5104 l 7346 5088 l
 7375 5072 l 7403 5056 l 7430 5040 l 7456 5025 l 7481 5010 l
 7506 4995 l 7530 4980 l 7553 4965 l 7575 4950 l 7600 4933 l
 7625 4915 l 7650 4898 l 7674 4880 l 7698 4862 l 7722 4843 l
 7746 4824 l 7769 4805 l 7792 4785 l 7814 4765 l 7836 4745 l
 7858 4725 l 7878 4705 l 7898 4685 l 7917 4665 l 7936 4645 l
 7953 4626 l 7969 4607 l 7985 4588 l 7999 4570 l 8013 4552 l
 8026 4535 l 8038 4517 l 8050 4500 l 8062 4481 l 8074 4462 l
 8085 4443 l 8096 4423 l 8107 4402 l 8118 4380 l 8129 4356 l
 8141 4331 l 8152 4304 l 8164 4276 l 8176 4246 l 8188 4216 l
 8200 4185 l 8211 4155 l 8222 4128 l 8231 4103 l 8238 4083 l

 8250 4050 l gs col0 s gr gr
 [] 0 sd
% arrowhead
0 slj
n 8189 4389 m 8236 4087 l 8077 4348 l 8153 4312 l 8189 4389 l 
 cp gs 0.00 setgray ef gr  col0 s
/Helvetica-iso ff 360.00 scf sf
8250 4425 m
gs 1 -1 sc (copy_buffer$return!alloc!max) col8 sh gr
/Helvetica-iso ff 360.00 scf sf
5775 5400 m
gs 1 -1 sc (-1) col8 sh gr
/Helvetica-iso ff 360.00 scf sf
5550 2475 m
gs 1 -1 sc (-1) col8 sh gr
/Helvetica-iso ff 360.00 scf sf
8250 3225 m
gs 1 -1 sc (0) col8 sh gr
/Helvetica-iso ff 360.00 scf sf
6225 3225 m
gs 1 -1 sc (0) col8 sh gr
/Helvetica-iso ff 360.00 scf sf
4200 1725 m
gs 1 -1 sc (0) col8 sh gr
/Helvetica-iso ff 360.00 scf sf
2025 3300 m
gs 1 -1 sc (0) col8 sh gr
/Helvetica-iso ff 360.00 scf sf
5100 6075 m
gs 1 -1 sc (copy_buffer$return!used!max) col8 sh gr
/Helvetica-iso ff 360.00 scf sf
150 4425 m
gs 1 -1 sc (buffer!used!max) col8 sh gr
/Helvetica-iso ff 360.00 scf sf
8625 1050 m
gs 1 -1 sc (cc2!alloc!max) col8 sh gr
/Helvetica-iso ff 360.00 scf sf
6000 1050 m
gs 1 -1 sc (cc2!used!max) col8 sh gr
/Helvetica-iso ff 360.00 scf sf
675 1050 m
gs 1 -1 sc (buf!used!max) col8 sh gr
/Helvetica-iso ff 360.00 scf sf
4800 4575 m
gs 1 -1 sc (0) col8 sh gr
$F2psEnd
rs
end

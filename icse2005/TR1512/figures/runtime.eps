%!PS-Adobe-2.0 EPSF-2.0
%%Title: runtime.fig
%%Creator: /s/transfig-3.2.3d/exe/fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Sun May  2 23:24:43 2004
%%For: vg@prospero.cs.wisc.edu (Vinod Ganapathy)
%%BoundingBox: 0 0 770 580
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 580 moveto 0 0 lineto 770 0 lineto 770 580 lineto closepath clip newpath
-17.3 600.5 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% crosshatch45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<828282824444444428282828101010102828282844444444
	828282820101010182828282444444442828282810101010
	282828284444444482828282010101018282828244444444
	282828281010101028282828444444448282828201010101
	828282824444444428282828101010102828282844444444
	8282828201010101>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P6 exch def

% horizontal lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 8 true [ 16 0 0 -8 0 8 ]
	{< ffff000000000000ffff000000000000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P9 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
/Helvetica ff 315.00 scf sf
9225 4500 m
gs 1 -1 sc (other local) col0 sh gr
/Helvetica ff 315.00 scf sf
8850 4875 m
gs 1 -1 sc (variables of ) col0 sh gr
/Courier-Bold ff 315.00 scf sf
10575 4875 m
gs 1 -1 sc (foo) col0 sh gr
/Helvetica ff 315.00 scf sf
2475 6300 m
gs 1 -1 sc (return address,) col0 sh gr
/Helvetica ff 315.00 scf sf
2550 6600 m
gs 1 -1 sc (frame pointer.) col0 sh gr
/Helvetica ff 315.00 scf sf
8925 6300 m
gs 1 -1 sc (return address,) col0 sh gr
/Helvetica ff 315.00 scf sf
9000 6600 m
gs 1 -1 sc (frame pointer.) col0 sh gr
% Polyline
30.000 slw
gs  clippath
11385 2610 m 11385 2790 l 11825 2790 l 11465 2700 l 11825 2610 l cp
eoclip
n 11400 2700 m
 13050 2700 l gs col0 s gr gr

% arrowhead
n 11825 2610 m 11465 2700 l 11825 2790 l 11825 2610 l  cp gs 0.00 setgray ef gr  col0 s
/Times-Bold ff 270.00 scf sf
11850 2550 m
gs 1 -1 sc (FMTPTR) col0 sh gr
% Polyline
gs  clippath
11385 4185 m 11385 4365 l 11825 4365 l 11465 4275 l 11825 4185 l cp
eoclip
n 11400 4275 m
 13050 4275 l gs col0 s gr gr

% arrowhead
n 11825 4185 m 11465 4275 l 11825 4365 l 11825 4185 l  cp gs 0.00 setgray ef gr  col0 s
/Times-Bold ff 270.00 scf sf
11925 4125 m
gs 1 -1 sc (ARGPTR) col0 sh gr
% Polyline
gs  clippath
4935 3735 m 4935 3915 l 5375 3915 l 5015 3825 l 5375 3735 l cp
eoclip
n 4950 3825 m
 6600 3825 l gs col0 s gr gr

% arrowhead
n 5375 3735 m 5015 3825 l 5375 3915 l 5375 3735 l  cp gs 0.00 setgray ef gr  col0 s
/Times-Bold ff 270.00 scf sf
5400 3675 m
gs 1 -1 sc (FMTPTR) col0 sh gr
% Polyline
gs  clippath
4935 5235 m 4935 5415 l 5375 5415 l 5015 5325 l 5375 5235 l cp
eoclip
n 4950 5325 m
 6600 5325 l gs col0 s gr gr

% arrowhead
n 5375 5235 m 5015 5325 l 5375 5415 l 5375 5235 l  cp gs 0.00 setgray ef gr  col0 s
/Times-Bold ff 270.00 scf sf
5475 5175 m
gs 1 -1 sc (ARGPTR) col0 sh gr
/Helvetica ff 315.00 scf sf
9000 7725 m
gs 1 -1 sc (local variables) col0 sh gr
/Helvetica ff 315.00 scf sf
9225 8025 m
gs 1 -1 sc (of ) col0 sh gr
/Courier-Bold ff 315.00 scf sf
9600 8025 m
gs 1 -1 sc (printf) col0 sh gr
/Helvetica ff 315.00 scf sf
2850 8100 m
gs 1 -1 sc (of ) col0 sh gr
/Courier-Bold ff 315.00 scf sf
3225 8100 m
gs 1 -1 sc (printf) col0 sh gr
/Helvetica ff 315.00 scf sf
2625 7800 m
gs 1 -1 sc (local variables) col0 sh gr
/Courier-Bold ff 300.00 scf sf
525 8400 m
gs 1 -1 sc  90.0 rot (printf) col0 sh gr
/Helvetica ff 300.00 scf sf
525 7200 m
gs 1 -1 sc  90.0 rot (stack frame) col0 sh gr
/Helvetica ff 300.00 scf sf
525 3375 m
gs 1 -1 sc  90.0 rot (stack frame) col0 sh gr
/Courier-Bold ff 300.00 scf sf
525 4125 m
gs 1 -1 sc  90.0 rot (foo) col0 sh gr
% Polyline
7.500 slw
 [60 30 15 30] 0 sd
n 300 825 m
 1950 825 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
gs  clippath
645 5340 m 705 5340 l 705 5189 l 675 5309 l 645 5189 l cp
705 810 m 645 810 l 645 961 l 675 841 l 705 961 l cp
eoclip
n 675 825 m
 675 5325 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 45.00 55.00] PATmp PATsp ef gr PATusp gs col0 s gr gr
 [] 0 sd
% arrowhead
n 705 961 m 675 841 l 645 961 l 705 961 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 645 5189 m 675 5309 l 705 5189 l 645 5189 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
 [60 30 15 30] 0 sd
n 300 9075 m
 1950 9075 l gs col0 s gr  [] 0 sd
% Polyline
 [60 30 15 30] 0 sd
n 300 5325 m
 1950 5325 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
gs  clippath
645 9090 m 705 9090 l 705 8939 l 675 9059 l 645 8939 l cp
705 5310 m 645 5310 l 645 5461 l 675 5341 l 705 5461 l cp
eoclip
n 675 5325 m
 675 9075 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 45.00 355.00] PATmp PATsp ef gr PATusp gs col0 s gr gr
 [] 0 sd
% arrowhead
n 705 5461 m 675 5341 l 645 5461 l 705 5461 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 645 8939 m 675 9059 l 705 8939 l 645 8939 l  cp gs 0.00 setgray ef gr  col0 s
/Helvetica ff 315.00 scf sf
2700 4500 m
gs 1 -1 sc (other local) col0 sh gr
/Helvetica ff 315.00 scf sf
2325 4875 m
gs 1 -1 sc (variables of ) col0 sh gr
/Courier-Bold ff 315.00 scf sf
4050 4875 m
gs 1 -1 sc (foo) col0 sh gr
% Polyline
15.000 slw
gs  clippath
6990 8940 m 7110 8940 l 7110 8653 l 7050 8893 l 6990 8653 l cp
eoclip
n 7050 6450 m
 7050 8925 l gs col0 s gr gr

% arrowhead
n 6990 8653 m 7050 8893 l 7110 8653 l 6990 8653 l  cp gs 0.00 setgray ef gr  col0 s
/Helvetica ff 270.00 scf sf
6825 9150 m
gs 1 -1 sc  90.0 rot (Direction of stack growth) col0 sh gr
% Polyline
7.500 slw
 [60 30 15 30] 0 sd
n 6825 1725 m
 7725 1725 l gs col0 s gr  [] 0 sd
% Polyline
 [60 30 15 30] 0 sd
n 6825 3825 m
 7725 3825 l gs col0 s gr  [] 0 sd
% Polyline
 [60 30 15 30] 0 sd
n 6825 5325 m
 7725 5325 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
gs  clippath
7320 3840 m 7380 3840 l 7380 3689 l 7350 3809 l 7320 3689 l cp
7380 1710 m 7320 1710 l 7320 1861 l 7350 1741 l 7380 1861 l cp
eoclip
n 7350 1725 m
 7350 3825 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 7380 1861 m 7350 1741 l 7320 1861 l 7380 1861 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 7320 3689 m 7350 3809 l 7380 3689 l 7320 3689 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
 [60] 0 sd
gs  clippath
7320 5340 m 7380 5340 l 7380 5189 l 7350 5309 l 7320 5189 l cp
7380 3810 m 7320 3810 l 7320 3961 l 7350 3841 l 7380 3961 l cp
eoclip
n 7350 3825 m
 7350 5325 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 7380 3961 m 7350 3841 l 7320 3961 l 7380 3961 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 7320 5189 m 7350 5309 l 7380 5189 l 7320 5189 l  cp gs 0.00 setgray ef gr  col0 s
/Helvetica ff 300.00 scf sf
6750 4575 m
gs 1 -1 sc (DIS) col0 sh gr
/Helvetica ff 300.00 scf sf
6675 2775 m
gs 1 -1 sc (LEN) col0 sh gr
% Polyline
15.000 slw
n 8475 5325 m
 11325 5325 l gs col0 s gr 
% Polyline
n 2025 5325 m
 4875 5325 l gs col0 s gr 
% Polyline
n 2025 9525 m 2025 375 l 4875 375 l
 4875 9525 l gs col0 s gr 
% Polyline
n 2025 825 m
 4875 825 l gs col0 s gr 
% Polyline
n 2025 9075 m
 4875 9075 l gs col0 s gr 
% Polyline
7.500 slw
n 2025 5325 m 4875 5325 l 4875 5925 l 2025 5925 l
 cp gs col7 0.25 shd ef gr gs col0 s gr 
% Polyline
n 2025 6825 m
 4875 6825 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 135.00 455.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
15.000 slw
n 8475 9525 m 8475 375 l 11325 375 l
 11325 9525 l gs col0 s gr 
% Polyline
n 8475 825 m
 11325 825 l gs col0 s gr 
% Polyline
n 8475 9075 m
 11325 9075 l gs col0 s gr 
% Polyline
7.500 slw
n 8475 1725 m 11325 1725 l 11325 3825 l 8475 3825 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P9 [16 0 0 -8 565.00 115.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 8475 5325 m 11325 5325 l 11325 5925 l 8475 5925 l
 cp gs col7 0.30 shd ef gr gs col0 s gr 
% Polyline
n 8475 6825 m
 11325 6825 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 565.00 455.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2025 1725 m 4875 1725 l 4875 3825 l 2025 3825 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P9 [16 0 0 -8 135.00 115.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
2 slj
gs  clippath
8503 3843 m 8472 3791 l 8342 3867 l 8461 3833 l 8372 3919 l cp
eoclip
n 8850 5625 m 8847 5624 l 8842 5622 l 8831 5619 l 8816 5614 l 8795 5607 l
 8768 5599 l 8738 5588 l 8705 5577 l 8670 5564 l 8634 5550 l
 8599 5536 l 8565 5521 l 8533 5507 l 8503 5492 l 8475 5477 l
 8449 5462 l 8425 5446 l 8403 5430 l 8382 5414 l 8363 5396 l
 8345 5378 l 8329 5358 l 8313 5338 l 8299 5319 l 8286 5299 l
 8274 5278 l 8261 5256 l 8249 5232 l 8237 5208 l 8226 5183 l
 8215 5156 l 8204 5128 l 8193 5100 l 8183 5070 l 8173 5040 l
 8164 5010 l 8155 4979 l 8146 4948 l 8139 4916 l 8131 4885 l
 8125 4854 l 8118 4823 l 8113 4793 l 8108 4763 l 8103 4734 l
 8099 4706 l 8096 4678 l 8093 4651 l 8091 4625 l 8089 4600 l
 8088 4575 l 8086 4544 l 8086 4514 l 8086 4484 l 8087 4454 l
 8088 4425 l 8091 4396 l 8093 4367 l 8097 4338 l 8101 4310 l
 8107 4283 l 8112 4257 l 8118 4231 l 8125 4206 l 8132 4183 l
 8140 4160 l 8148 4139 l 8156 4119 l 8164 4101 l 8173 4084 l
 8182 4067 l 8191 4052 l 8200 4038 l 8212 4021 l 8224 4005 l
 8237 3990 l 8252 3975 l 8267 3961 l 8285 3946 l 8304 3932 l
 8326 3917 l 8349 3901 l 8372 3886 l 8396 3871 l 8419 3857 l
 8439 3846 l
 8475 3825 l gs col0 s gr gr

% arrowhead
0 slj
n 8372 3919 m 8461 3833 l 8342 3867 l 8372 3919 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
2 slj
gs  clippath
2053 3843 m 2022 3791 l 1892 3867 l 2011 3833 l 1922 3919 l cp
eoclip
n 2400 5625 m 2397 5624 l 2392 5622 l 2381 5619 l 2366 5614 l 2345 5607 l
 2318 5599 l 2288 5588 l 2255 5577 l 2220 5564 l 2184 5550 l
 2149 5536 l 2115 5521 l 2083 5507 l 2053 5492 l 2025 5477 l
 1999 5462 l 1975 5446 l 1953 5430 l 1932 5414 l 1913 5396 l
 1895 5378 l 1879 5358 l 1863 5338 l 1849 5319 l 1836 5299 l
 1824 5278 l 1811 5256 l 1799 5232 l 1787 5208 l 1776 5183 l
 1765 5156 l 1754 5128 l 1743 5100 l 1733 5070 l 1723 5040 l
 1714 5010 l 1705 4979 l 1696 4948 l 1689 4916 l 1681 4885 l
 1675 4854 l 1668 4823 l 1663 4793 l 1658 4763 l 1653 4734 l
 1649 4706 l 1646 4678 l 1643 4651 l 1641 4625 l 1639 4600 l
 1638 4575 l 1636 4544 l 1636 4514 l 1636 4484 l 1637 4454 l
 1638 4425 l 1641 4396 l 1643 4367 l 1647 4338 l 1651 4310 l
 1657 4283 l 1662 4257 l 1668 4231 l 1675 4206 l 1682 4183 l
 1690 4160 l 1698 4139 l 1706 4119 l 1714 4101 l 1723 4084 l
 1732 4067 l 1741 4052 l 1750 4038 l 1762 4021 l 1774 4005 l
 1787 3990 l 1802 3975 l 1817 3961 l 1835 3946 l 1854 3932 l
 1876 3917 l 1899 3901 l 1922 3886 l 1946 3871 l 1969 3857 l
 1989 3846 l
 2025 3825 l gs col0 s gr gr

% arrowhead
0 slj
n 1922 3919 m 2011 3833 l 1892 3867 l 1922 3919 l  cp gs 0.00 setgray ef gr  col0 s
/Helvetica-Bold ff 375.00 scf sf
3075 9900 m
gs 1 -1 sc (\(A\)) col0 sh gr
/Helvetica-Bold ff 375.00 scf sf
9675 9900 m
gs 1 -1 sc (\(B\)) col0 sh gr
/Courier-Bold ff 375.00 scf sf
3075 2775 m
gs 1 -1 sc (fmt) col0 sh gr
/Courier-Bold ff 375.00 scf sf
9525 2775 m
gs 1 -1 sc (fmt) col0 sh gr
/Helvetica ff 375.00 scf sf
3150 600 m
gs 1 -1 sc (......) col0 sh gr
/Helvetica ff 375.00 scf sf
9600 600 m
gs 1 -1 sc (......) col0 sh gr
$F2psEnd
rs
end
